

04_Dites au revoir au "quick and dirty" Antonin Morel


11:36:000503:000503_1 : 11:34:39:626: Super merci . 1
11:37:000504:000504_2 : 11:35:03:654: Ouais ça marche alors je teste le micro . 2
11:37:000505:000505_3 : 11:35:43:332: Il y a volontaire là-bas . 3
11:37:000506:000506_4 : 11:36:46:475: C'est parti bonjour à tous et bienvenue donc cette conférence on va parler de dire au revoir au quick and dirty c'est à dire comment passer du mode un peu quick and dirty dans une entreprise a quelque chose de un petit peu plus professionnel . 4
11:37:000507:000507_1 : 11:37:10:012: Ça me présenter je m'appelle Antonin je travaille dans une société qui s'appelle back market on vend des produits reconditionnés on est deux market place de positionner sur internet et téléphone des tablettes mais aussi des frigos . 1
11:37:000508:000508_2 : 11:37:22:155: Programmer de d'essayer de diminuer notre impact écologique sur la planète quand j'ai du temps libre je contribue en open source un projet français qui s'appelle zeste de savoir si vous connaissez pas aller faire un tour et quand j'ai encore un peu plus de temps libre j'écris parfois des articles sur Python et aussi django. 2
11:37:000509:000509_4 : 11:37:38:315: On va parler du coca Nancy donc on va forcément parler de la messe dos vous connaissez to Semedo . 4
11:38:000510:000510_1 : 11:37:44:977: Est-ce que vous connaissez son ancêtre . 1
11:38:000511:000511_2 : 11:37:47:879: Ouais QDOS ça voulait dire quick and dirty operating system exactement aller dîner pourquoi ils ont . 2
11:38:000512:000512_3 : 11:37:56:020: Qu'est-ce que c'est le quick and dirty alors là je peux me faire chier je vais définition Wikipédia une solution quick and dirty c'est une solution de brutes ou une programmation imparfaite inélégante où parfois inadéquate qui sert à résoudre ou à masquer les problèmes . 3
11:39:000513:000513_4 : 11:38:11:428: Moi j'aime bien cette définition surtout pour la fin ça sert à résoudre ou à masquer les problèmes donc dans la définition ça dit que parfois le côté nord si ça peut vraiment résoudre un problème et ça c'est quoi . 4
11:39:000514:000514_1 : 11:38:23:290: C'est la seule slide où je fais l'apologie du quick and dirty à me rassurer pas après je démonte tout pourquoi est-ce utile ben tout simplement parce que des fois on du Code crade entendu code sans teste entendu code qui est pas documenté avec code avec une mauvaise lecture on est parfois beaucoup plus rapide à lancer quelque chose et en fait du coup ça permet tout simplement . 1
11:39:000515:000515_2 : 11:38:24:290: D'arriver et d'occuper un marché business donc vous avez une idée voulais aller vite et ça vous permet d'être là d'occuper l'espace et du coup de commencer cette affaire avant-première vente et commencer à parler aux gens de vos projets vous avez déjà quelque chose qui existe donc le quick and dirty dans certaines situations ça peut être bien . 2
11:39:000516:000516_3 : 11:38:57:981: Un pour la suite de cette présentation je vous raconter une petite histoire et cette histoire elle est très fortement inspiré de mon arrivée au sein de back market il y a environ un an . 3
11:40:000517:000517_0 : 11:39:12:127: Je suis arrivé j'ai commencé par faire un constat de ce qu'il y avait chez back market et mes trois premier constat ça été seul celui de la codebase c'est un constat qu'il y avait un peu près 3 ans et qui était assez grosse on parle un peu près de 250000 lignes de Python qui avait été écrite par un fondateur et de developpeur
11:40:000518:000518_1 : 11:39:32:282: tout n'étais pas au rendez-vous mais c'était une codebase quand même assez grosse pour 3 ans de projet uniquement le code Python de 150000 lignes en plus de ça il faut rajouter bah tout le temps que letting le CSS le js execetera donc ça commence à devenir assez gros il y avait aucun test unitaire je pense que mon différent . 1
11:40:000519:000519_2 : 11:39:51:404: Un peu de scripts de vérification de données pour vérifier que tout s'est bien dans la balle surtout sur les paiements des choses Kuti comme la facturation exetera mais du coup c'était plutôt du correctif que du préventif et les départs en bas au tout début c'était simple 11 et du SSH sur divers d'instances du code . 2
11:40:000520:000520_3 : 11:40:07:549: Ça marche un certain temps mais bon vous imaginez le problème quand on commence à scaler et devenir une marque à l'international bah on peut plus vraiment travailler comme ça . 3
11:40:000521:000521_4 : 11:40:16:579: Trois autres constate consacrer TC ben oui j'imagine et il y avait une dette technique assez importante je vous disais tout a été fait en mode quick and dirty les gens et pas forcément une énorme expérience donc j'ai une tête technique qui grossit il y a beaucoup de ce que on appelle de la contamination la contamination c'est-à-dire un endroit vous allez faire du code qui est pas top vraiment . 4
11:41:000522:000522_1 : 11:40:33:705: Il est dans mon passé derrière vous et vos tout simplement dupliquer copier-coller ce code laà est-ce qui était pas ouf mais condensé dans un seul fichier ça commence à s'éparpiller dans toute votre codebase et là ça va être beaucoup plus difficile a refactor . 1
11:41:000523:000523_2 : 11:40:45:472: Pas de best practice pas vraiment de review formelle donc pas forcément ça va être en ça plutôt augmenter la technique . 2
11:41:000524:000524_3 : 11:40:52:181: Plan de développement c'était une bonne vieille image VirtualBox qui etait copier sur une clé USB de d'ordi en ordi alors c'est un côté hyper pratique qui est que eminutes vous pouvez commencer à dev mais dans la vie de tous les jours ça a pas mal d'inconvénient . 3
11:41:000525:000525_4 : 11:41:06:566: On a ce qu'on appelle le support chez nous alors le support c'est quoi c'est tout simplement aider les autres services donc les services qui sont pas un pro contact du client qui a un problème de remboursement il va falloir l'aider regarder pourquoi y a un problème de remboursement et là ça avec la technique les petits bugs te laisser à gauche à droite le support quand la boîte . 4
11:42:000526:000526_1 : 11:41:07:566: Il grossit du coup les dev ils passent beaucoup plus en plus de temps à faire des tâches récurrentes et donc moins de temps à faire du dev . 1
11:42:000527:000527_2 : 11:41:29:293: Tout ça parce que là j'ai constaté négatif on parle d'une boîte quelqu'un de plus de 10 million par mois et une croissance de 300 /:/ d'une année sur l'autre donc voyez que malgré une approche très rapide très occupé marché est vraiment pas de bonnes pratiques et ben on a quand même un résultat qui fonctionne . 2
11:42:000528:000528_4 : 11:41:48:429: Une fois que le constat est fait ben un moment faut changer la boîte elle peut pas toujours fonctionner comme ça pourquoi c'est pas possible parce que l'équipe de dev est là le support augmente parce qu'il y a plus en plus de clients plus en plus de gens au sein de la boîte donc du coup il y a moins en moins de features qui sont envoyés en poids donc - d'évolution ce qui est pas possible dans une entreprise . 4
11:43:000529:000529_1 : 11:42:09:561: Et avec la des techniques le code devient assez fragile il y a pas de test donc toutes les modifications deviennent assez dures à porter donc on risque de plus en plus de casser des choses par où est donc du coup bah situation où tout le monde sait que si on peut continuer à faire grossir la boîte et on peut plus continuer à fonctionner comme ça . 1
11:43:000530:000530_2 : 11:42:29:702: Une fois que les gens ont pris conscience et que tout le monde veut changer faut déterminer une un objectif une destination vers laquelle on veut aller donc là la réflexion c'est plutot de se dire ben c'est quoi le projet parfait pour un développeur je pense pas de réponse mais il y a souvent des éléments de réponse . 2
11:43:000531:000531_3 : 11:42:48:819: Un projet parfait ça va être par exemple un project avec des tests un projet bien documenté un projet facile à installer donc c'est un peu essayer de retrouver les différents objectifs . 3
11:43:000532:000532_4 : 11:43:00:061: Qu'est-ce qu'on a fait du coup les actions pour quitter ce fameux mode quick and dirty passé sur quelque chose de plus professionnel la première étape qu'on a mis en place et l'écriture de test ça peut paraître basique pour certains . 4
11:44:000533:000533_1 : 11:43:13:118: le truc c'est qu'on ne pas pas arriver dans une équipe et dans laquelle il y a pas de test qui sont écrits est arrivé on écrit les tests et le lendemain toutes les pull requests ont des tests ça fonctionne pas comme ça du coup c'est là où il faut être plus de pédagogie . 1
11:44:000534:000534_2 : 11:43:27:257: C'est par faire un premier workshop avec toute l'équipe et expliquer pourquoi on allait faire des tests comment aller faire des tests quel outil on a utilisé quelle stratégie qu'est-ce que c'est un bon test un mauvais test ça ça a été la première phase apprendre à laisser un peu couler pour voir comment les gens adopté et on est parti après chacun faire du pair programmingr développeurs pour voir si c'était . 2
11:44:000535:000535_3 : 11:43:46:405: Avec l'écriture de test si les tests étaient correctes vous avez des questions sur comment mieux testé et en parallèle de ça il y en a mis en place une CI pour plus avoir de problèmes avec les tests qui . 3
11:44:000536:000536_1 : 11:44:08:629: Un gros problème qu'on avait c'était celui du code mort alors qu'est-ce que c'est le code mort le code mort c'et du code que vous avez dans votre codebase de votre applicatifs et qui pourtant nouveau c'est rare . 1
11:44:000537:000537_2 : 11:44:09:629: N'est jamais appelé11:44:19:771: Plein de forme par exemple script que vous avez développé mais qui sont jamais lancer en prod qui sont pas des crons qui sont là mais personne ne les utilise ça peut être des méthodes au sein d'une classe qui s'appelle où ça peut être aussi par exemple . 2
11:44:000538:000538_3 : 11:44:33:892: Il y a du code qui ne peut jamais être appelé tout ce qu'on appelle du corps . 3
11:45:000539:000539_4 : 11:44:39:848: On a commencé par le retirer un peu à la main en s'appuyant sur l'expertise déjà des gens qui était déjà là depuis longtemps à cette section c'est que ça sert à rien . 4
11:45:000540:000540_1 : 11:44:48:985: Ce qui vous a permis de retirer plusieurs milliers de lignes de code de l'application et après ben on se mit à switcher . 1
11:45:000541:000541_2 : 11:44:56:656: package Python que je recommanderais nom qui s'appelle Vulture qui est super simple à utiliser sa culture qui vous permet en fait il analyse tout votre code et qui vous dit quels sont les endroits qui . 2
11:45:000542:000542_3 : 11:45:11:789: c'est pas 100/:/ safe donc faut pas trop le croire mais ça vous permet quand même d'avoir une bonne idée et une option qui s'appelle le taux de confiance qui vous permet justement de régler le taux de confiance que vous avez paroles petite donc ça c'est bien parce que ça permet d'automatisation processus et tu pouvais du coup trouver le code que vous allez supprimer . 3
11:46:000543:000543_4 : 11:45:31:530: Le 3e Point de la dette technique qu'on a attaqué c'est la migration de Django. 4
11:46:000544:000544_1 : 11:45:38:647: Si tu n'as CV version et on est passé sur django 1. 11 pour se connaissent pas django ça fait un beau petit saut de version beaucoup de choses ont changé notamment les migrations plein de sa taxe ont changé donc ça a été un sacré . 1
11:46:000545:000545_1 : 11:45:53:774: Même si je il y a django 2.1 Maintenant mais du coup ça nous a permis de . 2
11:46:000546:000546_3 : 11:46:00:805: Un peu plus a jour sur les outils qu'on utilise . 3
11:46:000547:000547_4 : 11:46:03:624: Après on a commencé tout ça on a voulu s'outiller dans quel outil on a utilisé au quotidien pour s'assurer qu'il ait pas de retour en masse de la dette technique on a utilisé majoritairement 4 outils . 4
11:46:000548:000548_0 : 11:46:16:748: le premier c'est le hook de pre commit . j'imagine que vous utilisez un peu près tous git ici . 1
11:47:000549:000549_2 : 11:46:22:086: hook qui vous permet en fait de lancer un petit script avant de vous laisser faire un comique sur un repo dans ce script vous mettez absolument ce que vous voulez vous pouvez mettre le lancement du linting par exemple nous on a surtout la vérification de syntaxe . 2
11:47:000550:000550_3 : 11:46:38:245: Déprécier parents dans la prochaine version Django la prochaine version du coup ça vous a l'air totalement concret de la lettre pour le prochain qui va vouloir changer de version donc du coup rend-on mots-clés utilise autre chose . 3
11:47:000551:000551_4 : 11:46:49:785: Le 2e outil c Black je sais pas c'est des utilisateurs de Black mais c'est un linter dans l'écosystème python qui est aujourd'hui de plus en plus utilisés plus en plus renommer nous on a choisi black pour quoi comme beaucoup de gens je pense parce que il y a aucune question à se poser sur le linting qui fait avec black . 4
11:47:000552:000552_1 : 11:47:07:909: Mais ça permet vraiment d'unifier la codebase le seul paramètre étant la longueur de ligne que vous désirez dans votre projet à partir de là tout est fait d'une certaine manière et ça permet pas mal d'uniformité . 1
11:48:000553:000553_3 : 11:47:18:072: Mon autre outil c'est isort alors là c'est un peu comme Black ça vous permet de limiter mais ça linte uniquement vos imports donc du coup ça va l'étrier et ça permet en fait tout le monde travaille sur la même convention de ordre des un porc et du coup ça facilite pas mal c'est deux outils il facilite pas mal notamment lors des mères gens sur Github ça vous permet d'avoir des choses beaucoup plus proche . 3
11:48:000554:000554_4 : 11:47:38:183: Uniquement le changement de logique vraiment métier et on se concentre plus sur les en fin de ligne les apostrophes simple ou double ce genre de petite . 4
11:48:000555:000555_1 : 11:47:47:300: Le dernier outils qu'on a intégré c'est coveralls c'est un sas qui est gratuit pour les projet open source qui est payant plus d'entreprises qui va vous permettre de suivre en fait de manière un peu sympa votre coverage de test . 1
11:48:000556:000556_2 : 11:48:01:423: À ceux des courses ça vous dit qu'elle est le coverage exactement dans lequel fichier après vous pouvez rentrer dans chaque fichier et voir quels sont les assertions 5S sont les lignes qui sont testés les lignes sont pas testé donc ça permet d'avoir vraiment une interface assez sympa depuis le navigateur et ça aide pas mal pour détecter les bout de code qui sont pas testé . 2
11:49:000557:000557_3 : 11:48:21:603: Le chantier suis en ça été celui de environnement de développement donc comme je l'ai dit au tout début c'était une image VirtualBox on a vite voulu sortir ça pour que ça soit plus pratique à utiliser au quotidien dans une première étape . 3
11:49:000558:000558_4 : 11:48:35:722: Vagrant c'est super bien c'est super simple à mettre en place vous avez juste un vagrantfile c'est pratique donc on est passé là dessus dans un premier temps et dans un deuxième temps on est passer sur docker c'était surtout pour être beaucoup plus proche de notre prod a d'autres qui vont travailler ou qui travaille sur . 4
11:49:000559:000559_1 : 11:48:54:856: Qui travaille sur docker d'autre sur vagrant . 1
11:49:000560:000560_2 : 11:48:58:210: Une fois qu'on a fait tout ça on à vous on se pose un peu la question des métriques on fait du travail tout ça mais comment quantifier de si on a vraiment réussir à réduire la dette technique comment on compte si si si nos tests sont bons ce genre de chose que personnellement je suis pas très fan des métriques pour les développeurs mais là dans notre projet savais quand même pas mal de sens . 2
11:49:000561:000561_3 : 11:49:18:368: Une fois qu'on a fait tout ça on à vous on se pose un peu la question des métriques on fait du travail tout ça mais comment quantifier de si on a vraiment réussir à réduire la dette technique comment on compte si si si nos tests sont bons ce genre de chose que personnellement je suis pas très fan des métriques pour les développeurs mais là dans notre projet savais quand même pas mal de sens . 3
11:50:000562:000562_4 : 11:49:26:423: Ça monte ça monte au fur à mesure donc du coup ça ça c'est une métrique assez simple que beaucoup de gens suivez que il faut suivre son père mais tout simplement badoo ou une idée donner une idée de où vous en êtes dans votre code baise par rapport au test que vous poser c'est pas forcément la seule métrique il faut regarder parce que des fois vous pouvez vous pour avoir un coverage . 4
11:50:000563:000563_1 : 11:49:44:582: Les vos tests ne sont pas très bon et du coup ça veut pas forcément dire grand-chose mais dans notre cas comme ce qui nous intéresse et c'était vraiment l'adoption de l'écriture déteste ça avait du sens de regarder . 1
11:50:000564:000564_2 : 11:49:55:593: La 2e métrique ça a été le nombre de lignes Python je vous l'ai dit j'étais assez choqué par la taille de la codebase mais sinon je suis arrivé par rapport à l'ampleur de l'applicatif ça c'est un peu plus d'historique du coup . 2
11:50:000565:000565_3 : 11:50:09:723: Ça m'a affolé de retrouver avec des milliers de lignes de code toutes les semaines dans votre application est un moment on a attaqué le gros chantier nettoyage de vous parler supprimer supprimer . 3
11:51:000566:000566_4 : 11:50:21:851: Un peu en croissance mais c'est normal dans le sens où on a plus de dev donc plus de fonctionnalités qui sortait du coup c'est normal que la codebase augmente par contre du coup on continue en parallèle de surveiller le code mort ce genre de chose pour avoir vraiment du code qui sert et qui est utile . 4
11:51:000567:000567_0 : 11:50:37:647: Ça c'est une métrique qu'on a pas mal suivi au début que je recommande pas forcément pour tout le monde mais c'est tout simplement le nombre de test unitaire qui sont dans la suite de test nous ça nous a vraiment permis de voir à quel moment se fait le déclic et de vraiment suivre l'adoption comme je disais c'est pas forcément
11:51:000568:000568_2 : 11:50:56:780: Écoute est au final ça veut pas forcément dire grand-chose si c'est des mauvais tests par exemple ça sert à rien . 2
11:51:000569:000569_3 : 11:51:02:525: Un du coup un petit bilan sur toutes les actions qu'on a mené moi ce que je retiens c'est plutôt que c'est le changement qui a vraiment été humains qui est le plus important est pas tant les changements technique qu'on a pu faire pourquoi parce que quand vous changer un outil technique vous passez de VirtualBox à docker . 3
11:52:000570:000570_4 : 11:51:25:676: c'est un outil que les devs utilisent au quotidien Hello du coup faut vraiment s'assurer d'avoir un accompagnement pour que les outils que vous mettez en place soit au moins aussi bon aussi pratique à utiliser et que les def puis se retrouver tout le réflexe qu'ils avaient . 4
11:52:000571:000571_1 : 11:51:38:629: Et au final beaucoup d' accompagnemenon t beaucoup de comment on va changer l'entreprise plutôt que des changements d'outils même si quelque chose . 1
11:52:000572:000572_2 : 11:51:48:700: Pour finir par là j'ai mis quelques références laisse là ils seront aussi dispo sur internet c'est majoritairement bah ce dont ton a parlé black, isort les hooks et tout . 2
11:52:000573:000573_3 : 11:51:59:293: Du coup si vous avez des questions . 3
11:52:000574:000574_4 : 11:52:02:051: Ouais . 4
11:52:000575:000575_1 : 11:52:07:997: Ouais . 1
11:52:000576:000576_2 : 11:52:17:890: Pâte . 2
11:53:000577:000577_3 : 11:52:24:025: Alors du coup la question c'est comment intégrer un gros vulture avec une du code django est-ce que vous avez eu des problèmes sur l'intégration aucun problème donc je sais pas si tu . 3
11:53:000578:000578_4 : 11:52:36:173: En faite le problème le problème qu'il y a c'est surtout les problèmes de faux positif Vulture utilise le module à St de Python pour un gros faire une inspection du code et regarder les méthodes par lesquelles on passait par lesquelles on passe à et cette approche elle est pas mal mais elle échoue à quelques endroits pas mal d'endroits notamment les template tag par exemple dans django . 4
11:53:000579:000579_1 : 11:52:56:317: Complètement incapable de vous dire lequel est utilisé et lequel n'est pas utilisé toute la notion de middleware c'est pareil comme les chaînes de middleware fin des classes de middleware sont stockées dans des chaînes il oublie complètement . 1
11:54:000580:000580_2 : 11:53:07:449: Le trio toutes les lignes avec grep et à toutes celles qui sont middleware quelque chose template quelque chose je sais que je les regarde même pas parce que ça va pas fonctionner après il y a des cas aussi un peu velus si tu fais sur si tu fais des getattr sur des classes un peu des trucs bizarres exetera là il va pas se retrouver ils ont un ticket dans le repo . 2
11:54:000581:000581_3 : 11:53:29:578: Justement fournir des intégration qui soit meilleur avec Django et avec d'autres projets et qui du coup gère les templatetags avec ce genre de chose . 3
11:54:000582:000582_2 : 11:53:57:620: en Gros la question c'est comment tu répartition temps entre le traitement de la dette technique les nouvelles features que tu dois que tu dois continuer à livrer quoi . 2
11:55:000583:000583_11 : 11:54:07:752: Je sais que une fois que tu as réussi à mettre en place un reflex déjà tu dis que tout ce qui est livré de nouveaux vas venir avec des tests et peut-être une prise de conscience de fait que si quelqu'un en train de passerdjango 1.11 il faut plus utiliser une certaine certaine syntaxe moque avait déjà une communication de tout ce que vous faites de nouveau essayer de le faire bien . 3
11:55:000584:000584_4 : 11:54:24:898: Ensemble de règles donc ça ça t'aide déjà à l'avenir et après on a une organisation en fait moi je suis au sein d'une équipe qui s'appelle la core team et comme dans un comme dans certains projet open source note responsabilité c'est vraiment de s'occuper de ce genre de chose donc pas au quotidien des features on est plutôt disponible pour les autres d'équipe et note responsabilité . 4
11:55:000585:000585_0 : 11:54:47:051:ce genre de changements de évidemment après chacun a mis la main à la pâte mais on est aussi là tu vas pour s'assurer que au quotidien en on suit ce genre de métrique et que en gros ça avance sur ses chantiers là mais ouais au début. Peux faire passer la pilule que tu vas réduire un peu le temps de travail feature mais c'est un investissement à long terme qu'il faut faire donc . 1
11:56:000586:000586_2 : 11:55:07:183: Alors . 2
11:56:000587:000587_3 : 11:55:24:588: sur le Truc de la pédagogie moi l'arme la plus efficace que j'ai c'est pas un bâton c'est plutôt expliquer pourquoi il faut faire les choses et en fait une fois que tu as réussi à emporter les gens dans le dans le pourquoi c'est beaucoup plus facile et les gens vont beaucoup plus facilement passer plutôt que le . 3
11:56:000588:000588_4 : 11:55:44:759: Comment tu changement tutu apporte un changement que ce soit dans une entreprise dans une asso dans un projet ou quoi que ce soit tu as toujours différent niveau d'adoption coin t'apporte un changement de 10 minutes après ils sont ils sont ok sur certains sujets sont un peu plus long . 4
11:56:000589:000589_1 : 11:56:03:891: En fonction de tes projets test early adopters vont aussi changer et du coup plus vous allez pouvoir vous reposer sur les early adopters une équipe qui a assez grande te reposer sur eux pour aussi continuer à dispatcher l'information . 1
11:57:000590:000590_2 : 11:56:16:308: Ouais bah en fait arriver un moment c'est vraiment la notion de scalabilité de ton équipe et ton entreprise ils sont bien rendu compte que en fait si tu as si tu as plein de la technique plein de bugs exetera le support tu vas devoir le traiter donc tu vas devoir continuer à répondre à tes petits bugs exetera mais arrive un moment faut peut-être mieux si c'est vraiment le fond du bec plutôt . 2
11:57:000591:000591_3 : 11:56:40:449: Intervenir et à faire des petits supporte plus sur cet axe là ça a été amené en tout cas on reste de l'entreprise en bas pendant un petit temps d'adaptation va peut-être un peu moins envoyez-moi un truc en Prada exetera par contre du coup c'est ce que je dis c'est vraiment long terme . 3
11:57:000593:000593_4 : 11:56:57:564: Partie du code . 4
11:58:000594:000594_1 : 11:56:59:710: Toutes les semaines ça intéresse plus le dev de continuer à faire toujours la même chose en boucle et c'est aussi énervant pour les équipes qui sont en face qui rencontrent toujours le même problème . 1
11:58:000595:000595_3 : 11:57:33:003: Après correction d'une dinde au bout d'une régression dans un deuxième temps on a rajouté les Tesla tu Paris ça a permis d'ajouter et après bah ouais et un moment on a dû repasser sur pas mal de la codebase . 3
11:58:000596:000596_4 : 11:57:45:142: il y a eu répartition entre les différents dev de qui voulait faire quoi avec plus ou moins des spécialités ça ça pas mal aider parce que du coup tu prends un peu plus d'honneur chips ta partie du code et tu as envie qu'elle soit testée il y a ça qui joue aussi tu regardes tu sais qu'il va voir bientôt une demande business l'as-tu donc tu dis est-ce que je peux . 4
11:58:000597:000597_1 : 11:58:03:288: Bah du coup tu peux plus facilement tolérer de pas avoir de test donc en gros c'est un peu une . 1
11:59:000598:000598_2 : 11:58:10:433: Rapport à la vision de l'entreprise et des différents métiers qui sont vis-à-vis de toi mais il y a des on a passé des heures et des heures a déjà écrire des tests sur du code existant c'est sympa aussi c'est que moi personnellement de faire ça pour savoir mon et tu trouves aussi des bugs en écrivant des tests. 2
11:59:000599:000599_3 : 11:58:28:577: Ah c'est cool par contre c'est vrai que je suis prends pas mal de temps . 3
11:59:000600:000600_4 : 11:58:34:905: Alors on a un peu réfléchi à faire ça parce qu'on a énormément d'endpoint api pendant un bon paquet une partie du Site qui marche avec vuejs une autre qui marche avec du angular et du coup on avait commencé on a commencé à faire un bout de projet Lama es vraiment la même idée c'était de . 4
11:59:000601:000601_1 : 11:59:00:056: Et l'idée c'était de faire en fait l'inspection des classes et qui te pré-écris des tests dire bah si se situe hérite de liste API view par exemple mac ce que tu dois tester ta liste de ce genre de chose en fonction de la classe donc tu herite devras écrire un test pour voir tes permissions donc si par exemple seulement . 1
12:00:000602:000602_2 : 11:59:21:188: En fait en fonction de l'héritage et du coup ça écrivez tout simplement un template de test mais un template de test donc on avait commencé à bosser là-dessus mais on l'a jamais vraiment utilisés de manière de manière concrète . 2
12:01:000603:000603_3 : 11:59:33:312: Dernière c'est fini ok on dit que c'est fini si vous aider question vous pouvez venir me voir et la société back market on est sponsor on a un stand à l'accueil et n'oubliez pas fuck new. 3
