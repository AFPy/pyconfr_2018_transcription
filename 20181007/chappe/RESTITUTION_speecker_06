 

06_Django & GraphQL Mehdi Raddadi


16:36:000404:000404_2 : 16:29:54:198: Alors est-ce que ça marche pas du tout . 2
16:36:000405:000405_3 : 16:30:33:352: Ça a l'air d'être bon . 3
16:36:000406:000406_4 : 16:30:37:126: Ouais mais ça va pas je pense pas que ça gêne de . 4
16:36:000407:000407_1 : 16:30:49:096: Je n'aime plus que ça . 1
16:36:000408:000408_2 : 16:30:51:420: Merci . 2
16:36:000409:000409_1 : 16:32:31:145: Bonjour à tous est-ce que vous m'entendez jusqu'au font pas du tout . 1
16:37:000411:000411_3 : 16:36:14:073: Moi je vais vous parler aujourd'hui de GrahQL avec Django . 3
16:37:000412:000412_4 : 16:36:19:121: Je m'appelle Mehdi Raddadi je suis développeur à polyconseil et je fais principalement du Django du view . 4
16:37:000413:000413_1 : 16:36:28:026: Un peu de Graphql du coup donc pour ceux qui connaissent pas polyconseil c'est une entreprise de conseil d'à-peu-près 150 personnes . 1
16:37:000414:000414_2 : 16:36:36:516: En particulier de l'équipe qui travaille en python et donc parmi les projets que vous connaissez peut-être c'est Autolib' . 2
16:37:000415:000415_3 : 16:36:46:652: Autolib c'est le système de partage de voiture qui était à Paris jusqu'à juillet dernier avait été fait entièrement en python Django pour le pour le système d'information et il comprit les jambes arquées qui était dans les voitures et dans les bornes . 3
16:38:000416:000416_4 : 16:37:05:372: Alors on va commencer par une rapide introduction pourquoi est-ce que j'en suis venu à graphql ensuite je vous présenter graphql en lui-même pour vous expliquer à quoi ça correspond et après on viendra à une à l'implémentation en python avec graphene et ensuite on ira les chercher un peu plus loin pour voir c'est mignon tout ça mais est-ce que concrètement ça marche si . 4
16:38:000417:000417_1 : 16:37:27:565: on cherche À faire plus de choses avec . 1
16:38:000418:000418_2 : 16:37:30:423: Alors pourquoi donc le voilà pas mal évalué évoluer sur sur les dernières années . 2
16:38:000419:000419_3 : 16:37:37:390: On était sur une architecture surtout avec bah on avait un client un serveur 11 et les requêtes dessus et nous répondez donc on pouvait faire le Skype horizontalement exetera . 3
16:39:000420:000420_4 : 16:37:49:221: Aujourd'hui on est plus passés sur différents clients donc à la fois du web à la fois du téléphone à la fois des tablettes mais aussi sur différentes choses au niveau du serveur donc potentiellement même avec des architectures microservices sur des choses qui peuvent être très différentes derrière et qui discutent . 4
16:39:000421:000421_1 : 16:38:07:130: Oui REST ça existe ça marche si vous avez des questions je vous invite à regarder la présentation qui a eu lieu aujourd'hui sur REST . 1
16:39:000422:000422_2 : 16:38:16:248: Mais ça marche pas forcément tout le temps donc je suis pas là pour vous expliquer que graphql est mieux que reste je suis pas là pour faire l'évangéliste je suis là pour vous montrer à quoi ça sert donc REST c'est pas un standard . 2
16:39:000423:000423_3 : 16:38:29:430: Ça ça peut être implémenter de manière assez différente ça peut être ça peut devenir compliqué à certains endroits alors après c'est pas ça veut pas dire que grave qu'elle va répondre à vos questions ça veut juste dire que vous avez des questions à vous poser au moment de l'architecture est-ce que concrètement quelle est la solution vous avez . 3
16:39:000424:000424_4 : 16:38:50:553: Et enfin l'une des problématiques de REST ça va être de vous avez besoin de faire . 4
16:39:000425:000425_1 : 16:39:00:169: Trespa ressources donc si vous avez besoin par exemple d'une ressource en particulier mais vous avez besoin de différentes données de cette ressource vous pouvez être amené à crête différence entre . 1
16:39:000426:000426_2 : 16:39:10:815: Alors qu'est-ce que c'est GraphQL . 2
16:39:000427:000427_3 : 16:39:15:012: Alors graphql c'est un langage de requête donc comme son nom l'indique c'est vraiment pour faire des requêtes ça a pas de présupposition de ce de ce qui se passe derrière c'est vraiment juste ben j'ai besoin d'une donnée j'ai besoin de d'un certain nombre de choses et ça va être la manière dont je vais le récupérer ça a été créé par facebook en 2015 open source et en 2016 . 3
16:40:000429:000429_2 : 16:39:43:317: Alors . 2
16:40:000430:000430_3 : 16:39:47:430: Bien voir que . 3
16:40:000431:000431_4 : 16:39:49:562: Graphql ça va pas être . 4
16:40:000432:000432_1 : 16:39:53:687: Graphql c'est vraiment un langage de requête faut voir ça un peu comme le SQL du web. 1
16:41:000433:000433_2 : 16:40:00:120: Donc là vous avez par exemple une requête . 2
16:41:000434:000434_3 : 16:40:04:338: Et de récupérer des informations donc là ce que 17 rue ket sais que je veux pas par exemple tout mes TODO je veux leur identifiant à quelle date a été créé je veux savoir balle créateur qui c'est je veux pas juste son identifiant et la description du tout donc là vous voyez vraiment le je veux quelque chose du coup je le demande et je l'écris . 3
16:41:000435:000435_0 : 16:40:24:708: En quelle en graphql il y a différentes il y a des objets donc ça dire que graphql c c base et bah comme son nom l'indique sur un graphe donc vous allez pouvoir récupérer différentes choses et bah typiquement vous allez voir que si on prend l'idée du graphe
16:42:000436:000436_1 : 16:40:43:873: Et ensuite on va descendre pour aller chercher, potentiellement les liens entre cet élément et d'autres objets donc là par exemple on commence par les sous-objets ensuite on descend sur par rapport à ce qu'il y a cet objet je veux ça . 1
16:42:000437:000437_0 : 16:40:58:011: Différents ont des c'est là qu'on définit les types donc les types c'est ce qui va construire votre paiement est le schéma c'est ce que vous allez pour c'est ce que vous allez exploser est-ce qu'il va expliquer en fait à l'utilisateur de votre API de quoi qu'est-ce que je peux demander à Athènes. Donc là ça c'est du graphql pure
16:42:000438:000438_4 : 16:41:19:148: Images pour n'importe quel type de backend ça sera la même tête donc là par exemple on peut voir que on a des types . 4
16:42:000439:000439_1 : 16:41:28:249: Existe déjà donc par exemple on va avoir les identifiant les chaînes de caractères exetera on a aussi des types qui peuvent être définis par l'utilisateur comme on peut le voir dans la todo list and is the to do . 1
16:42:000440:000440_2 : 16:41:43:386: On en revient qu'est-ce que je peux lui demander à ce que ça me zappés à quoi elle me sert et qu'est-ce que je peux répéter dessus donc on a comme vous l'avez vu tout à l'heure là il va y avoir en fait plusieurs objets donc le premier ça va être les requêtes donc . 2
16:42:000441:000441_3 : 16:42:02:510: Équivalent de je veux j'ai besoin de cette ressource arrête uniquement de la lecture . 3
16:42:000442:000442_4 : 16:42:08:649: SSD fini comme suit donc là par exemple on dit qu'on veut l'utilisateur avec l'identifiant numéro deux et on a besoin de ces informations . 4
16:43:000443:000443_1 : 16:42:16:787: Et donc . 1
16:43:000444:000444_2 : 16:42:18:850: Information elles vont être tournées sous cette forme et comme vous pouvez le voir et bien sûr sur cette requête . 2
16:43:000445:000445_3 : 16:42:28:461: On a exactement ce qu'on a demandé juste avant je sais pas si vous . 3
16:43:000446:000446_4 : 16:42:36:595: Filateur un email exetera et on reçoit exactement le même bloc de données donc c'est-à-dire que à chaque fois vous allez faire votre 4 votre compte ou autre utilisateur va demander à un certain nombre d'information il n'aura pas plus pas moins . 4
16:44:000447:000447_1 : 16:42:50:575: Donc ça présuppose plusieurs choses c'est que la première il va falloir savoir que par exemple vos développeurs il suffisait conscience que de ses ressources ont comment il va pouvoir aller les récupérer vous donner beaucoup de pouvoir à à votre service client parce que bah concrètement il va pouvoir demander plus de choses il va pouvoir demander demande . 1
16:44:000448:000448_2 : 16:43:12:760: Ça ça va vraiment être le produit est le fruit qui va définir les requêtes qui vont à t'envoyer . 2
16:44:000449:000449_3 : 16:43:19:748: Ensuite on en a un deuxième type donc on appelle les mutations les mutations ça va être pour faire de l'écriture donc ça veut dire que ça peut être pour créer des utilisateurs . 3
16:47:000002:000002_4 : 16:43:29:856: On premises ça va être aussi pour toutes les tâches qui vont devoir et exécuter sur le serveur vous pouvez avec une mutation si elle a été dessiné demandé de lancer un chrono demandé de lancer une certaine page une certaine action ça un peu tout et n'importe quoi c'est à vous de le définir . 4
16:47:000003:000003_1 : 16:43:48:438: Et même principe que pour que pour les requêtes ça vous renvoie exactement ce que vous lui avez demandé donc là par exemple on a dit qu'on créer un utilisateur et que quand ça revenait on voulait récupérer son nom son avis exetera et il vous renvoie exactement la même chose c'est bon j'ai bien créé mon utilisateur il a bien ces informations la . 1
16:47:000004:000004_2 : 16:44:10:108: La troisième chose c'est ce qu'on appelle les la notion de l'abonnement les subscription cette notion là en fait ça va être liée à plutôt à du temps réel en gros si vous dites que vous souhaitez vous abonner par exemple à un flux et derrière à chaque fois que il y a une modification sur sur ce fut ça va être mis à jour donc c'est par exemple ce que fait facebook quand vous . 2
16:47:000005:000005_3 : 16:44:11:108: Pasito mon utilise facebook mais par exemple quand il y a un poste et que quelqu'un mais un lac dessus concrètement c'est ce qui se passe derrière ces il y a . 3
16:47:000006:000006_4 : 16:44:44:458: Il va avoir une requête qui va être envoyée en disant bah le poste le poste x a eu un lac de plus est-ce qui sait que se répercuter en fait surtout les autres surtout les autres utilisateurs qui sont actuellement en train de visualiser ce poste et ça va . 4
16:47:000007:000007_2 : 16:47:02:003: Je veux trouver Quelle sont les les ressources disponibles sur ce serveur . 2
16:48:000008:000008_0 : 16:47:07:578: Qu'est-ce que je peux demander donc ça fait à la fois une office de documentation donc ça vous empêche pas décrire la doc attention c'est juste que si vous arrivez sur l'aine. Vous allez pouvoir savoir qu'est-ce qui est disponible donc est-ce que je peux récupérer les TODO qu'est-ce que je peux récupérer dans est-ce que potentiellement vous les verrez pas s'il y a . 3
16:48:000009:000009_4 : 16:47:25:694: Est-ce que c'est qui t'a dit tabac de zapper graphql elle en a une première qui est complètement public et qui vous permet de récupérer scrap et ce qui se passe dans les répose hitori mais aussi il y a une partie privée et ça là toute façon vous pouvez faire l'introspection vous la verrez pas parce que toute manière vous n'êtes pas authentifié vous n'avez pas le droit de l'avoir . 4
16:48:000010:000010_1 : 16:47:41:806: Écoute pourquoi alors la première partie c'est comme on a dit vous récupèrez exactement ce que vous voulez donc pas de surprise y a pas deux je récupère trop de données par rapport à la page que j'affiche ou par rapport à l'application mobile il y en a pas j'en demande trop puisque bah dans ce cas là c'est de votre faute parce que concrètement vu que vous récupère exactement . 1
16:48:000011:000011_2 : 16:48:01:938: Prépa à cette donnée ou trop donné c'est qu'un moment votre requête est mal faite . 2
16:48:000012:000012_3 : 16:48:06:945: Le 2e sais que c'est assez facile de faire évoluer l'API donc j'en ai pas parlé là mais il est possible de déprécier des champs et donc en fait quand vous allez le récupérer le schéma d'introspection ça va être marqué que attention là vous êtes en train de vous êtes en train d'utiliser enfant qui va être déprécier donc ça n'empêche pas toujours de faire de la documentation . 3
16:48:000013:000013_4 : 16:48:24:069: Que c'est assez Volutis comme on peut rajouter des champs sans que ça casse parce que concrètement si vous avez rajouter un champ dans une ressource mais qu'elle n'a encore requête est nulle part mais ça veut pas dire que vous pouvez pas le faire ça veut dire que ça casse pas votre compte . 4
16:49:000014:000014_1 : 16:48:39:212: Et enfin . 1
16:49:000015:000015_0 : 16:48:41:334: En général à Solène. Graphql encore une fois ça dépend de votre architecture c'est pas parce que vous pouvez le faire en un seul et même endroit que vous êtes obligé de le faire ça veut juste dire vous avez la possibilité . 2
16:49:000016:000016_3 : 16:48:52:962: Heure du coup maintenant à parler un peu de graphène graphene pouces je sais pas si vous connaissez c l'implémentation de Piton de graphql . 3
16:49:000017:000017_4 : 16:49:03:380: Du coup on essaie de créer une petite une petite application TODO je sais que c'est pas un cas d'usage très très compliqué très complexe mais on va quand même on va quand même se prêter au jeu donc on va commencer par créer des mods . 4
16:50:000018:000018_1 : 16:49:19:526: Pouvez voir concret on définit de modèle donc dans du Django je sais pas si vous êtes tous amis avec jangot mais il se trouve que graphene son interface assez facilement avec . 1
16:50:000019:000019_2 : 16:49:28:682: Modèle avec un certain nombre de champs on les a ajouté à new model ensuite on va pouvoir créer schéma qui correspondent qui correspondent à CAC modèle donc là on peut voir que on a créé les deux types que vous avez vu tout à l'heure qui était dessiner . 2
16:50:000020:000020_3 : 16:49:47:814: Vraiment l'image de c'est assez facile parce que là comme je disais graphene se plug assez facilement dans Django et donc vous allez récupérer en fait au mot niveau de la payer exactement ce que vous avez défini dans votre modèle encore une fois c'est un choix d'architecture c'est-à-dire que si vous voulez pas exposer vos modèles directement vous n'êtes pas obligé vous pouvez très bien . 3
16:50:000021:000021_4 : 16:50:07:015: Très bien dire que bah ma base de donnée à la tête tête mais que concrètement je veux pas que mon shéma il copine à base de données j'ai pas besoin de tout ou j'ai besoin de faire un certain nombre de calcul ça ça voudra juste dire qu'à ce moment-là vous allez devoir définir des types qui sont différentes et ce sera à vous de faire les associations c'est juste que pour . 4
16:51:000022:000022_1 : 16:50:22:136: Présentation c'était plus facile de passer par ça . 1
16:51:000023:000023_0 : 16:50:25:106: Donc une fois qu'on a créé no type bah on a juste dit que dans notre schéma on allait avoir on a la voir des TODO et des listes mais concrètement on sait pas encore comme on peut le récupérer donc ça c'est liste et l'on va définir du coup des ----
16:51:000024:000024_2 : 16:50:26:106: Qui sont en fait qu'est-ce qu'on va pouvoir récupérer et donc là ce que vous voyez c'est le réseau tout doux ça permet de . 2
16:51:000025:000025_3 : 16:50:27:106: Si jamais je te demande en tout doux c'est comme ça qu'il faut que tu fasses donc comme je disais graphql et agnostique de skate sous ses il s'en fout il a pas besoin de savoir est-ce que je tape sur une base de données est-ce que potentiellement je tape sur une autre API est-ce que c'est du passé du mot aucun rapport le seul truc qui dois savoir c'est comment . 3
16:51:000026:000026_4 : 16:51:08:484: Au niveau du bakcend . 4
16:51:000027:000027_1 : 16:51:10:968: Une fois qu'on a fait ça on peut aussi faire par exemple dans la même chose pour les mutations et alors là . 1
16:52:000028:000028_2 : 16:51:20:086: Pouvez voir que c'est quelque chose d'assez simple parce que il se trouve que il y a des librairies qui permettent de récupérer de récupérer directement les objets de par exemple on peut leur passer dans ta face avec les CIRF et ça permet de créer des choses à se fasse assez facilement je mets un point d'attention si vous avez besoin de faire des choses compliquées . 2
16:52:000029:000029_3 : 16:51:39:236: Vous allez vite vous rendre compte que la magie noire qui a la marque beaucoup moins bien mais on en parlera un peu plus tard . 3
16:52:000030:000030_4 : 16:51:45:983: Donc une fois qu'on a créé nos modèles on a créé nos différentes nos différentes requettes et nos différentes mutations pour expliquer la comment traduisez les requêtes qui vont arriver sur le back-end on va pouvoir créer une classe avec le schéma au niveau du projet en fait on lui explique bah voilà moi je vais avoir je vais avoir 2 . 4
16:52:000031:000031_1 : 16:52:08:134: Les écoliers les mutations donc c'est-à-dire que par exemple si vous avez plusieurs d'applications vous pouvez toutes les toutes les importer la . 1
16:53:000032:000032_2 : 16:52:15:298: TODO schéma pour mutation là vous pouvez en à vous pouvez en ajouter à la pelle si vous avez 4 5 6 autant de models application dans votre dans votre projet django rien vous empêche de toutes les mettre là encore une fois ça c'est si vous voulez un seul point d'accès si vous en voulez plusieurs faudra en creer autant que vous voulez . 2
16:53:000033:000033_3 : 16:52:33:962: Une fois que c'est une fois que ça se fait on va pouvoir rajouter à dans le setting Django la librairie qui va bien et surtout lui spécifié mais où est-ce que je vais aller chercher mon schéma . 3
16:53:000034:000034_4 : 16:52:34:962: Sur la site d'avant on a mis un petit des blagues au milieu alors ça c'est assez pratique quand on développe ce que ça fait c'est que globalement on va avoir graphene qui va venir au médecin qui va venir au milieu des requêtes et qui va permettre entre autres quand vous faites vos requêtes dans . 4
16:53:000035:000035_1 : 16:52:35:962: De vous dire bah par rapport à la à la requête grave quel que j'ai envoyé voici le nombre de requêtes SQL que j'ai vu passer voici le temps de réponse exetera censé assez pratique notamment pour vous assurer que vous êtes en train de faire n'importe quoi . 1
16:53:000036:000036_2 : 16:53:18:493: Et après ben en fait classique Django on créer une API . 2
16:53:000037:000037_3 : 16:53:24:628: Et on peut commencer à jouer . 3
16:53:000038:000038_4 : 16:53:27:543: Du coup . 4
16:54:000039:000039_1 : 16:53:29:661: Si on regarde . 1
16:54:000040:000040_2 : 16:53:31:959: C'est graphiql une interface assez utilisé dans graphql donc il est disponible dans graphene mais aussi disponible par exemple si jamais vous voulez le faire sur un serveur note ce que ça fait c'est que ça vous permet de jouer avec la pays s'il y a une notion d'historique je vais essayer de . 2
16:54:000041:000041_3 : 16:53:53:338: Donc là ce que vous avez ce que de ce côté-là c'est qui s'appelle la documentation mais qui en fait est l'équivalent de mon shéma dans son introspection donc c'est hier que vous pouvez vous balader ou ballader dedans et regarder qu'est-ce qui est disponible qui sait que si jamais vous avez besoin d'informations et vous avez au niveau de l' environnement de développement un graphe . 3
16:54:000042:000042_4 : 16:54:14:473: Tu n'es pas forcément active en production attention mais vous avez les informations vous pouvez voir ce qu'il y a dans vous pouvez voir comment les vous pouvez vous balader dans est assez facilement savoir qu'est-ce qu'est-ce qu'il y a dans . 4
16:54:000043:000043_0 : 16:54:27:613: Mais non l'autre. Force et que . 1
16:54:000044:000044_2 : 16:54:37:744: Exemple . 2
16:54:000045:000045_3 : 16:54:39:891: Balade à côté . 3
16:55:000046:000046_4 : 16:54:42:019: Donc là faut savoir que il y a des petits trucs sympas c'est-à-dire que . 4
16:55:000047:000047_1 : 16:54:50:235: On a de l'auto-complétion . 1
16:55:000048:000048_2 : 16:54:51:235: Au lieu de récupérer identifiant aussi son mail . 2
16:55:000049:000049_3 : 16:54:59:559: Et du coup on les voit passer on peut ajouter le on peut ajouter le debug on peut ajouter son peux vraiment on peut vraiment jouer avec qui fait que c'est assez facile de jouer avec. 3
16:55:000050:000050_4 : 16:55:09:124: Exemple qu'on pourrait créer un utilisateur elle et lui dire que c'est pas possible parce que moi je l'ai déjà créez l'utilisateur qu'on préparation donc il fait parti des . 4
16:56:000051:000051_1 : 16:55:21:770: J'ai parti des utilisateurs que j'avais qu'on avait requis . 1
16:56:000052:000052_2 : 16:55:27:176: Regarde . 2
16:56:000053:000053_3 : 16:55:32:312: Du coup on voit que ça reste quand même assez agréable à utiliser . 3
16:56:000054:000054_4 : 16:56:01:489: Mais du coup . 4
16:56:000055:000055_1 : 16:56:05:000: Alors ça c'est un exemple de ce que vous pouvez faire au niveau du front alors faut savoir qu'au niveau du front il y a une librairie qui est particulièrement utilisée qui s'appelle Apollo il y a des implémentations dans un certain nombre de framework qui marche très très bien que ce soit React ou ViewJs je crois même qu'ils ont ils ont une librairie vanilla qui vous permet de faire . 1
16:57:000056:000056_2 : 16:56:26:137: réaction je crois même qu'ils ont ils ont une Emploi JavaScript si c'est ce que vous voulez faire sans avoir besoin de passer par un framework en particulier et du coup là par exemple c'est ce que j'écris c'est ce que j'ai écrit dans un projet de démo pour pouvoir permettre à un utilisateur de se loguer . 2
16:57:000057:000057_3 : 16:56:41:246: Non . 3
16:57:000058:000058_4 : 16:56:44:388: Donc là on récupère en fait c'est le récupère la mutation qui permet de gens qui permet de faire moi j'ai choisi de faire du JWT donc en fait on lui dit que la mutation pour se pour se loguer ça va être celle-là elle nous on va récupérer un token et en fait le token c'est du . 4
16:57:000059:000059_1 : 16:57:03:523: Le passe dans le header pour que la typiquement il y a des requêtes qui vont être protégé ou si l'utilisateur n'est pas authentifié ça va être un problématique d'ailleurs graphique elle est très pratique mais si vous avez l'authentification sur . 1
16:58:000060:000060_2 : 16:57:20:657: Sur vos mutation vous pourrez pas les faire avec un graphql parce qu'entre autre sur des choses vous avez utilisé les header HTTP il est fait pas donc pour ça il y avait un autre outil qui s'appelle Insomnia avec lequel vous pouvez jouer en fait voulu passer le header HTTP à chaque fois que vous faites une requete. 2
16:58:000061:000061_4 : 16:57:37:806: Comme je disais quand ça marche bien ça marche bien quand c'est facile c'est qu'on peut vraiment rapidement mettre en place une nouvelle une nouvelle application parcontre il y a quelques soucis . 4
16:58:000062:000062_1 : 16:57:52:980: Qui aujourd'hui ne sont pas forcément tous résolu vous avez premièrement les soucis d'authentification donc euh bah ça ça va être à votre ça va être avec backend de gérer comment il le fait vous allez avoir les notions de permission est-ce que j'ai le droit d'accéder à cette ressource est-ce que j'ai droit d'accéder à ce champ est-ce que en tant qu'utilisateur . 1
16:58:000063:000063_2 : 16:58:12:131: Vous avez les requêtes malicieuse comme on disait concrètement si demain je tape sur cette API et je fais je lui dis bah je veux la todo list je voulais TODO associés et en fait je dis que je suis pas un peu bête donc je vais passer sur je vais dans la dans le tout doux je vais redemander la to do list et puis dans la tu dis je vais redemander les tours . 2
16:59:000064:000064_3 : 16:58:32:269: doux associés et en fait je dis que je suis pas un peu con donc je vais passer sur je vais dans la dans le tout doux je vais redemander la to do list et puis dans la tu dis Sur son comme ça pour vous allez complètement avec l'attelle bakan parce que c'est pas c'est pour ça ça ça peut avoir des requêtes malicieuse ça va être des requêtes avec énormément récursion ça va des requêtes qui demande trop de temps de calcul donc ça il y a des y a des moyens de s'en prémunir mais encore une fois ça va être implémenter niveau back-end est actuellement graphene . 3
16:59:000065:000065_4 : 16:58:51:548: ils ont pas choisi de pallier à ces problèmes . 4
16:59:000066:000066_1 : 16:58:55:975: Mais du coup si on va un peu plus loin . 1
17:00:000067:000067_2 : 16:59:00:255: Est-ce que vraiment ça marche ou pas est-ce que aujourd'hui on production je l'utiliserai ben on va voir par exemple au niveau de la sécurité on peut mettre en place plusieurs choses pour être sûr qu'on va se prémunir minimum . 2
17:00:000068:000068_3 : 16:59:15:402: Par exemple là pour l'authentification étant donné que c'est à vous de la définir moi j'avais choisi de faire JWT mais si vous avez un autre chose ce sera a voulu implémenter donc vous pouvez utiliser graphene par exemple avec graphql JWT librairie vous pouvez mettre en login required au-dessus du résolveur utilisateur même passer la . 3
17:00:000069:000069_4 : 16:59:43:546: Vous choisissez par exemple je peux vous décidez de migrate application qui aujourd'hui du reste rien ne vous empêche pour le gué votre utilisateur passer par l'API REST jusqu'à un moment il faudra dire à Django qu'utilisateur a oublié le nom et donc utiliser le réseau pour vérifier . 4
17:00:000070:000070_1 : 17:00:00:687: Par exemple avec le avec grave que gwt on aura un truc qui ressemblera à ça donc pourrais vérifier le token lui demander et faire tout un tas de choses faut faire attention à ce niveau-là le la librairie permet pas encore de révoquer le token côté serveur donc c'est pratique mais ça peut avoir des ça peut avoir des feuilles de sécu pour faire un petit peu attention ça veut juste dire que le bal . 1
17:01:000071:000071_2 : 17:00:25:837: Par exemple avec le avec grave que gwt on aura un truc qui ressemblera à ça donc pourrais vérifier le token lui demander et faire tout un tas de choses faut faire attention à ce niveau-là le la librairie permet pas encore de révoquer le token côté serveur donc c'est pratique mais ça peut avoir des ça peut avoir des feuilles de sécu pour faire un petit peu De quel côté fonte au moment du le garde mais ça veut aussi dire que si on pique le token de votre utilisateur par un moyen X ou Y si vous n'êtes pas capable de le révoquer côté backen vous allez avoir quelques petits soucis . 2
17:01:000072:000072_3 : 17:00:38:090: Alors CORS qui normalement si vous l'avez mis en place en production vous dit que il y a une certain nombre d'URL et de domaines qui permet de taper sur votre à payer donc ça ça permet de se prémunir encore encore un petit peu de . 3
17:02:000073:000073_4 : 17:00:55:235: Problématique donc bah pour ceux qui sont déjà du reste Django CORS headers ça marche vachement bien continez à l'utiliser . 4
17:02:000074:000074_2 : 17:01:02:908: Alors ensuite ce que vous pouvez faire aussi c'est que comme j'ai dit on a des requêtes malicieuse donc les requêtes malicieuse concrètement va te problématique ça va être il va falloir potentiellement les arrêter avant qu'elle arrive au résolveur donc vous pouvez utiliser soit des middleware soin des contacte manager pour X ou Y je veux que j'en veux pas je la boot si ce que font que c'est qu'est-ce que c'est github c'est qu'en fait au moment où il voit passer la rocade graphql il calcule le évalue le temps tu vas mettre la requête et si elle dépasse un certain incertain coefficient ils disent non on n'en veux pas . 2
17:02:000075:000075_0 : 17:01:41:485: Mais du coup ça va vraiment pas là encore une fois ça va être à vous de le mettre en place ça va être à vous de définir vos propres d'outils et de décider qu'est-ce qui qu'est-ce qui vous va bien et ça va être il y a pas de il y a pas de solution magique ce qui sait que par exemple par rapport à tout à l'heure on avait les mutations
17:03:000076:000076_4 : 17:02:02:682: Utilisateurs authentifiés vous pourrez pas les utiliser vous allez vous allez avoir besoin de définir vos propres s Oliver et la d'ajouter de la logique donc ça va pas faciliter le développement de votre backend par rapport à des rêves doux de soucis c'est juste plus pratique côté parce que c'est un petit peu plus facile de se balader dans l'API . 4
17:03:000077:000077_1 : 17:02:21:715: Alors les tests ajouter des tests si vous en faites pas mais les tests c'est vachement pratique moi ce que en faisant j'ai fait plusieurs essais et ce que je préconise c'est plutôt plutôt de d'utiliser les requêtes du frontières que vous avez votre cerveau développeur au niveau du front teeth av de quelle ressource ils vont avoir besoin ils savent de quelle requête si . 1
17:03:000078:000078_2 : 17:02:42:913: Vous pouvez tout à fait vous en servir dans les tests en définition que sur tel pages jaunes sur tel sur tel type de résolveur on sait qu'on peut avoir les requêtes ABCD ça veut pas dire qu'il faut tout les mettre parce que sinon ça vous allez ajouter de la lourdeur et de la difficulté au moment du développement mais ça veut a minima dire que vous tester quand même votre aide . 2
17:03:000079:000079_3 : 17:03:03:019: Vous pouvez tout à fait vous en servir dans les tests en définition que sur tel pages jaunes sur tel sur tel type de résolveur on sait qu'on peut avoir les requêtes ABCD ça veut pas dire qu'il faut tout les mettre parce que sinon ça vous allez ajouter de la lourdeur et de la difficulté au moment du développement mais ça veut a minima Tu sais que si un moment vos tests ne passent pas ça veut dire de toute façon on va te rendre à péter au moment où vous mettez la la nouvelle version en Prod . 3
17:04:000080:000080_4 : 17:03:12:727: Là par exemple c'est ce que font GraphQL WTC qui met en place et permettre d'utiliser un ami de Loire pour les tests en disant bah je vais je vais juste ajouter un utilisateur de login qui vous permet par exemple de quand même pouvoir tester vos requêtes même si elles sont protégées par par le login . 4
17:04:000081:000081_1 : 17:03:32:176: Alors là on arrive au . 1
17:04:000082:000082_0 : 17:03:37:304: Quelle sécu ce qui se passe aujourd'hui c'est que si vous utilisez graphene Django et si vous voulez utiliser de la fin Django c'est très très bien si vous voulez faire du des applications simples malheureusement actuellement si vous avez des ForeignKey qui des ManyToMany qui se baladent dans vos modèles vous allez très très vite
17:05:000083:000083_3 : 17:03:59:435: Donc ça ça veut dire que ça veut pas dire que vous pouvez pas le faire ça veut juste dire que encore une fois la complexité va être déplacée dans les résolveurs donc si vous avez besoin de faire des cils selected pour vous assurer que tous les objets sont bien chargé au même moment ça peut être fait dans les résolveur par contre étant donné que vous pouvez voir passer un . 3
17:05:000084:000084_4 : 17:03:60:435: Le le fait de cacher ça va être assez content ça va ça va être un petit peu plus compliqué donc c'est qui avait fait une solution pour l'instant . 4
17:05:000085:000085_2 : 17:04:33:785: C'est le data-loader Et en gros ce que ça fait c'est une boîte un peu magique qui vous permet de récupérer des clés des identifiants et d'envoyer un peu moins de requête à la base de données et ça permet aussi de cacher c'est pas encore très très bien documenté ça marche pas encore tout à fait j'ai malheureusement Partie de retour c'est-à-dire que aujourd'hui grave c'est vachement bien je pense que c'est une technologie qui a de l'avenir en python ça permet de faire des choses assez facilement malheureusement le l'écosystème ai pas encore tout à fait mature aujourd'hui on est loin d'atteindre la maturité du de l'écosystème note et il y a plein de choses qu'on peut faire déjà plein de choses ça avance . 2
17:05:000086:000086_3 : 17:05:17:254: Graphene à ils ont commencé à faire leurs leur prochain donc graphene s'appuie sur un truc qui s'appelle graphql graphene core et en fait le il y a déjà le graphql graphene core next qui est en préparation qui va a priori remplacer grâce grâce à une chorégraphie actuelle et lui il vient déjà avec la notion d'abonnement tout un tas de choses qui sont que ça va mieux marcher et que ça . 3
17:06:000087:000087_4 : 17:05:40:376: Delastek qui a été qui a été créé par facebook mais on n'y est pas encore . 4
17:06:000088:000088_1 : 17:05:47:138: Dans l'Utah suivre les . 1
17:06:000089:000089_2 : 17:05:50:289: Du coup merci beaucoup les slides sont disponibles sur Github il y a un petit projet de démo qui permet de voir un peu bas à quoi ça ressemble si vous voulez regarder un peu plus haut un peu plus en détail j'ai essayé de mettre en place les la notion d'abonnement mais c'est un poil compliqué en ce moment. 2
17:06:000090:000090_3 : 17:06:09:057: En ce moment il y a différentes librairie qui se balader qui se battent les unes contre les autres et qui sont mieux en a qui sont plus tout à fait maintenu en a qui sont mais ça va venir je sais que c'est possible j'ai juste pas encore trouvé le moyen comment . 3
17:06:000091:000091_4 : 17:06:23:324: Voilà si vous avez des questions . 4
17:06:000092:000092_1 : 17:06:26:388: Oui . 1
17:07:000093:000093_2 : 17:06:36:540: Bah après . 2
17:07:000094:000094_3 : 17:06:41:712: Les codes d'erreur n'ont pas été a été abordés alors . 3
17:07:000095:000095_4 : 17:06:47:868: En plus rien quand je regarde là-haut mais c'est qui va se passer en fait c'est que les surtout les erreurs qui vont qui vont apparaître ça va être les erreur de type Jacques site envoie une mutation avec où tu sais que pour créer un utilisateur tu as besoin de son . 4
17:07:000096:000096_1 : 17:07:04:005: Aimer son password et que tu lui envoies pas ce qu'il va te répondre c'est que il y a un des champs qui manque en te disant bah écoute moi on m'a dit que enfin le type me dit que j' ai la mutation me dis je dois avoir ses de champs j'en ai pas l'un des deux il va juste te dire non c'est pas possible parce que j'ai parlant des de chant si tu lui passes par exemple quelque chose qui . 1
17:07:000097:000097_2 : 17:07:25:161: Mettre une chaîne de caractère il va te répondre la même chose à dire non mais là en ce moment là je vais en entier si tu me passes une chaîne de caractère ça marche juste pas . 2
17:07:000098:000098_3 : 17:07:32:256: Je vais voir si on peut . 3
17:07:000099:000099_4 : 17:07:36:625: Alors . 4
17:07:000100:000100_1 : 17:07:39:773: Par exemple . 1
17:08:000101:000101_2 : 17:07:42:471: Ouvrir ce truc là . 2
17:08:000102:000102_3 : 17:07:45:960: Voilà ça ressemble à ça . 3
17:08:000103:000103_4 : 17:07:50:129: Bah après GraphQL, non c'est pas du HTTP justement c'est-à-dire que ce qui se passe c'est que graphql c'est juste le c'est juste un langage de requête donc il se trouve que ce que vous envoyer CD blog de gisone est-ce que vous récupérez CD blog de gisone mais par contre c'est pas pour autant que ça se présuppose que vous utilisez HTTP de souci vous voulez . 4
17:08:000104:000104_1 : 17:07:52:129: N'importe quel autre protocole ça passe aussi le seul truc que ça dit c'est me la Roquette que j'envoie elle a t-elle tête la requête que je récupère a-t-elle tête au milieu ce que vous utilisez . 1
17:08:000105:000105_2 : 17:08:23:449: Non pas du tout . 2
17:08:000106:000106_3 : 17:08:27:621: Alors . 3
17:09:000107:000107_4 : 17:08:29:752: Là en fait la plupart sont les requêtes graphql son envoyé sous la forme je passe si on les voit . 4
17:09:000108:000108_1 : 17:08:36:631: Plan la voilà . 1
17:09:000109:000109_0 : 17:08:39:822: Voilà voilà tu sais c'est envoyé dans la rue qui s'est envoyé directement dans l'URL est globalement c'est un poste donc c'est pareil si vous utilisez de faire un gate avec la même chose sur un sur un âne. Graphql se trouve que graphene va vous dire que non ça marche pas . 2
17:09:000110:000110_3 : 17:08:55:432: Alors la question c'est est-ce qu'il y a un code d'erreur les arcades trop coûteuse alors comme j'ai dit requête trop coûteuse ça va présupposé que c'est le baptême qui la gère donc si c'est le baptême qui la gère c'est à toi de dire à l'erreur c'est ça mais du coup c'est pas implémenté dans graphe année c'est pas dans la spec ça c'est vraiment du ça c'est vraiment de le petit . 3
17:10:000111:000111_4 : 17:09:20:572: Pour être sûr que le service reste en bonne santé donc ça ça va être complètement à la décharge de l'équipe qui choisi de faire le bac . 4
17:10:000112:000112_1 : 17:09:27:997: Alors la question c'est est-ce que la spécification définit les codes d'erreur oui et non elle définit les codes d'erreur qui s'engage à dire qui tousse qui va être validation des types est-ce que la . 1
17:10:000113:000113_2 : 17:09:48:145: Amis au bonne endroit est-ce que la est-ce que le est-ce que sémantiquement la requête a du sens là où il y a des codes d'erreur qui sont dessinés typiquement c suite que vous avez . 2
17:10:000114:000114_3 : 17:09:58:160: C'est là-bas non il manque un argument par contre pour toutes les autres d'erreur ça va être ça va être backen de les implémenter . 3
17:10:000115:000115_4 : 17:10:06:811: Oui . 4
17:10:000116:000116_1 : 17:10:08:896: Alors la question c'est pour les pour les requêtes est-ce qu'on peut récupérer l'utilisateur c'est ça alors il se trouve que oui . 1
17:11:000117:000117_2 : 17:10:23:055: Il se trouve que oui donc par exemple dans graphene Django on peut utiliser le contact donc s'il y a des choses qui sont passés dans entre autre un utilisateur logué on peut le récupérer . 2
17:11:000118:000118_3 : 17:10:37:002: Alors la question c'est à dire que de préciser la notion de l'abonnement alors la notion d'abonnement c'est vraiment le principe c'est que . 3
17:11:000119:000119_4 : 17:10:56:124: L'utiliser surtout pour des endroits où on a besoin d'une mise à jour rapide et automatique du client donc typiquement ça va être on peut prendre l'exemple d'un chat on utiliserait pas forcément graphql pour le faire mais l'idée ça va être que j'ai un utilisateur qui va modifier quelque chose sur l'un des objets et je veux notifier les autres utilisateurs qui sont en train de travailler . 4
17:12:000120:000120_1 : 17:11:17:257: donc ce qui se passe en fait d'ailleurs c'est que c'est du WebSocket donc après tu pourrais par exemple il y a certaines librairie qui se bloque directement dans les modèles Django et qui défie qui permettent de définir une notion de l'abonnement à chaque fois qu'un modèle a été modifié à chaque fois que tu rajoutes un objet . 1
17:12:000121:000121_2 : 17:11:36:374: Typiquement ça va être l'exemple facebook j'ai j'ai mon ami à qui a posté qui a posté de tels telles informations je suis en train de je suis en train de le regarder et je vois les like et les commentaires au fur et à mesure donc là c'est le en fait ce que ça fait c'est qu'à chaque fois qui a quelque chose qui rajouter le serveur le serveur le vois note ici les clients qui sont connectés sur . 2
17:12:000122:000122_3 : 17:11:58:524: Et à ce moment-là le fontaine rajoute et recharge une recharge passant ça dépend de comment il est définit le contenu . 3
17:12:000123:000123_4 : 17:12:08:138: Vraiment pour faire de la mise à jour en direct . 4
17:13:000124:000124_1 : 17:12:11:819: Alors la question c'est est-ce que pour les requêtes en lecture il y a possibilité de faire des requêtes conditionnel alors qu'est-ce que tu appelles conditionnel déjà . 1
17:13:000125:000125_2 : 17:12:26:126: Alors . 2
17:13:000126:000126_0 : 17:12:34:271: Du coup le conditionnel est possible côté front tu peux très bien mettre des tu peux mettre des conditions dans le dans la Requette directement en disant que en fonction de par exemple une variable ou une variable b tu récupères tel ou tel champ ça c'est un premier. Le deuxième c'est qu'effectivement tu peux dire côté back-end que tu vas utiliser ou non quelle partie mais c'est ce qu'on dit . 3
17:13:000127:000127_4 : 17:12:59:419: Tu veux par exemple github une partie de l'API qui voit pas au même titre si tu as des si tu as des objets qui ne doivent pas être qui ne doivent pas être inquiété par un utilisateur Népal ok mais en fait ça revient à faire ce travail là après donc soit tu vas utilisé par exemple des choses comme le HAC login required qui peut être pratique mais après ça va être . 4
17:14:000128:000128_1 : 17:13:20:546: Superuser il a pas le droit de récupérer ses il a le droit de récupérer tous les champs Si mon utilisateur n'est pas supérieur je veux pas qu'il ait accès à ça parce qu'il a pas les permissions mais ça c'est la logique et à faire dans le résolveur donc si tu veux quelque chose de conditionnel ça va être à toi de le faire faut bien faut bien se rendre compte par contre . 1
17:14:000129:000129_2 : 17:13:21:546: Au niveau de l'introspection par . 2
17:14:000130:000130_3 : 17:13:41:911: Tu vas mettre fin ça va être plus difficile de travailler à partir de plus tu mets de choses qui ont des conditions plu ça va être compliqué et puis au moment du coup tu vas travailler sur le front il va falloir que bah par exemple tu es développeurs il soit tu superuser parce que concrètement si vois pas au niveau de la au moment l'introspection la totalité du schéma . 3
17:14:000131:000131_4 : 17:13:58:058: Ben ça va perdre un petit peu de son intérêt . 4
17:15:000132:000132_1 : 17:14:03:096: Alors alors lac . 1
17:15:000133:000133_2 : 17:14:26:138: Alors la question c'est pour la sécurité et pour la gestion des champs est-ce que il est possible de ne pas les exposés à la rouille encore une fois c'est le résolveur qui fait le boulot donc c'est-à-dire que à partir du moment où par exemple tu as récupéré l'utilisateur du contexte il y a absolument rien qui t'empêche de dire que quand je recupere par exemple on prenait . 2
17:15:000134:000134_3 : 17:14:46:278: Alors la question c'est pour la sécurité et pour la gestion des champs est-ce que il est possible de ne pas les exposés à la rouille encore une fois c'est le résolveur qui fait le boulot donc c'est-à-dire que à partir du moment où par exemple tu as récupéré l'utilisateur du contexte il y a absolument rien qui t'empêche de dire Moi si j'ai des to do list il est possible que je dois je ne puisse pas voir la to do liste de mes collègues ou la tout vidéo d'utilisateur mais ça c'est vrai ça Loire qui va aller les chercher au moment où toi tu vas définir ton par exemple tu dis que tu veux récupérer la totalité des to do list en tant que développeur tu sais qu'il y en a plus mais en tant qu'utilisateur tu veux . 3
17:15:000135:000135_4 : 17:15:04:519: Récupérer les tiennes en tout cas si je vais sur son profil au niveau du schéma d'introspection . 4
17:15:000136:000136_1 : 17:15:11:525: Alors ça c'est plus compliqué parce que le schéma l'introspection il va être récupéré être récupéré avec l'utilisateur courant donc c'est-à-dire que si tu prends le profil d'un utilisateur le schéma le schéma l'introspection que tu vas voir et le schéma que tu récupéreras mais ça va pas de présupposé que tu peux penser à papa n'a pas la documentation par contre rien ne t'empêche . 1
17:18:000137:000137_2 : 17:15:36:669: Et toi tu dessiner . 2
17:18:000138:000138_3 : 17:15:39:429: Deschamps . 3
17:18:000139:000139_4 : 17:15:41:648: Le préciser la . 4
17:18:000140:000140_4 : 17:18:08:624: Je viens que je recommence s'il te plaît . 4
17:18:000141:000141_1 : 17:18:12:237: Mahara question c'est est-ce qu'on peut faire des requêtes par exemple sur les listes c'est ça la . 1
17:19:000142:000142_2 : 17:18:24:183: Alors du coup la question c'est plus est-ce qu'on peut filtrer les les objets qu'on cherche oui on peut filtrer les objets qu'on cherche . 2
17:19:000143:000143_3 : 17:18:34:368: On pourrait dire moi je veux tous les tous doux mais uniquement de la liste avec la vie numéro 2 . 3
17:19:000144:000144_4 : 17:18:41:561: Du coup ça c'est possible après pour faire des filtres un peu plus custom IC en fait ils vont être déssiné au monde ou au niveau des résolveur 16h que au niveau de 1 ans pardon au niveau du type par exemple on peut récupérer un type 1 type d'un modèle et on peut lui dire que en plus de ça on va lui ajouter tel ou tel tel ou tel chant et du coup c'est ces gens qui ont . 4
17:20:000145:000145_1 : 17:19:02:699: Par exemple on pourrait ajouter un filtre combat lance dans un cue quelque chose dans Django et on ressort on restera pas envie on a d'appeler Core i7 en fonction de ça donc c'est possible mais ça c'est juste que ça suppose que il faut que un moment le chant filtre ils sont exposés donc soit Vial si tu sois . 1
17:20:000146:000146_2 : 17:19:21:804: Autrement soi ça va être en fait quelque chose qui est déjà dessiné ça ça va être quelque chose à ajouter donc par exemple il y a le facebook ils ont ils ont un fils a un tout petit peu plus loin que le graphql que j'ai présenté l'Aïd un truc qui s'appelle relais de faire la pagination la recherche des curseurs exetera et euh par exemple c'est un peu le défaut que le défaut de Grasse . 2
17:20:000147:000147_3 : 17:19:47:941: Autrement soi ça va être en fait quelque chose qui est déjà dessiné ça ça va être quelque chose à ajouter donc par exemple il y a le facebook ils ont ils ont un fils a un tout petit peu plus loin que le graphql que j'ai présenté l'Aïd un truc qui s'appelle relais de faire la pagination la recherche des curseurs exetera et euh par exemple c'est un peu le défaut que le défaut de Métisse implémenter uniquement pour rivets pour le moment mais ça permet de dire que je veux les quatre premiers je veux les cinq derniers je veux ce entre les entre le numéro de temps elle numéro temps ça permet un filtre un filtrage qu'un peu plus facile et apparemment trop de fer de la pagination mais c'est prêt implémenter si vous si vous utilisez riz lait avec Graffin . 3
17:20:000148:000148_4 : 17:20:08:207: Ne présuppose pas que vous pouvez pas le faire . 4
17:20:000149:000149_1 : 17:20:11:152: Oui . 1
17:21:000150:000150_3 : 17:20:25:002: Alors . 3
17:21:000151:000151_4 : 17:20:33:054: Alors la question c'est sûr comment concrètement en implémenter subscription c'est ça . 4
17:22:000152:000152_1 : 17:20:42:110: Les souscriptions ça va surtout être c implémente a beaucoup d'endroits avec du WebSocket donc par exemple ça moi j'ai regardé pas mal de libérer de librairie différentes quand j'ai préparé la conférence il y a des endroits où c'est dû à ce que pure il y a des endroits Océane elle s'utilise . 1
17:22:000153:000153_2 : 17:21:03:249: Malheureusement aujourd'hui la documentation et encore pas très présente il y a beaucoup de livres Éric icerde un peu à la même chose parce que ce sont des initiatives de personnes qui ont trouvé que le développement de graphène est un peu trop long et qui du coup on a essayé de créer leur propre truc comme je disais il y a le graphène cornex qui arrive qui a priori aura des . 2
17:22:000154:000154_4 : 17:21:23:418: Par contre pour tout ce qui est pour tout ce qu'il fera implémentation du serveur WebSocket a priori c'est pas encore tout à fait le cas il y a une librairie je crois qui s'appelle graphql WS qui se bloque dans du Chanel avec du Django mais j'ai pas eu le temps de creuser plus loin que ça parce qu'il se trouve que la doc est pas Code pour trouver comment faire fonctionner mais je sais que ça existe pourras pour être passé sur les il fut pour avoir regardé comment ça fonctionne dans le code c'est possible c'est juste que c'est Patricia . 4
17:22:000155:000155_2 : 17:22:04:449: Oui encore une encore une fois c'est ça alors ne la question c'est que pour la notion de subscription on fait pas de . 2
17:23:000156:000156_3 : 17:22:18:585: Ne présuppose pas dû de ce qu'on utilise pour le transport absolument comme je disais grave quel saint langage de requête tout ce qui présuppose c'est la tête et la réponse que tu que tu que vont avoir tes secrets . 3
17:23:000157:000157_4 : 17:22:30:489: Bon elles doivent elles doivent elles doivent avoir une certains certains aspects qui est défini dans les rêves c'est qui était publié par facebook que je vous invite oui ou que faire un kiné race et de je sais plus combien de pages où ils définissent exactement comment fonctionne le langage quels sont les types qu'est-ce qu'on peut faire avec comment paiement Télépro . 4
17:23:000158:000158_1 : 17:22:48:629: Si grave que le intéresse je vous invite à passer dessus même ne serait-ce que rapidement pour avoir une bonne idée de ce que ça fait mais effectivement comme Gizeh grave qu'elle ne présuppose pas du transport ça peut être dû HTTP sappadu abso 4 ça peut être qu'on se . 1